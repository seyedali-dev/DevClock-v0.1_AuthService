#file: noinspection HttpUrlsUsage

spring:
  #enable .env.properties file
  config:
    import: optional:classpath:.env.properties

--- # DB
spring:
  datasource:
    url: ${DB_URL:jdbc:h2:mem:testdb}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:sa}
    driverClassName: ${DB_DRIVER_CLASS_NAME:org.h2.Driver}
  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: true
    properties:
      hibernate:
        dialect: ${DB_HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
  sql:
    init:
      mode: always
  h2:
    console:
      enabled: true

--- # Eureka client
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

--- # Keycloak
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/DevVault-v2.0

# Custom var
keycloak:
  user:
    realm: DevVault-v2.0
    server-url: http://${KEYCLOAK_SERVER_HOST:localhost}:8080 # keycloak server's port
    client-id: admin-cli # this is mandatory
    grant-type: password
    username: ${KEYCLOAK_REALM_ADMIN_USER_USERNAME} # the newly created user with the given roles
    password: ${KEYCLOAK_REALM_ADMIN_USER_PASSWORD}
    default-role: user

--- # Redis
spring:
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  cache:
    type: redis
    cache-names:
      - user-cache
      - role-cache
    redis:
      cache-null-values: true
      time-to-live: ${REDIS_CACHE_TIME_TO_LIVE:600000} # 1 hour

--- # Swagger
springdoc:
  swagger-ui:
    oauth:
      client-id: ${KEYCLOAK_CLIENT_ID}
      client-secret: ${KEYCLOAK_CLIENT_SECRET}
